---
  - name: create /etc/kubernetes/specs directory
    file:
      path: "{{ kubernetes_spec_dir }}"
      state: directory
  - name: copy default-backend.yaml to remote
    template:
      src: default-backend.yaml
      dest: "{{ kubernetes_spec_dir }}/default-backend.yaml"
  - name: start default-backend serivce
    command: kubectl apply -f {{ kubernetes_spec_dir }}/default-backend.yaml

  - name: copy nginx-ingress-controller.yaml to remote
    template:
      src: nginx-ingress-controller.yaml
      dest: "{{ kubernetes_spec_dir }}/nginx-ingress-controller.yaml"
  - name: start nginx-ingress-controller serivce
    command: kubectl apply -f {{ kubernetes_spec_dir }}/nginx-ingress-controller.yaml
    register: out

  - block:
    - name: get desired number of ingress pods
      shell: "kubectl get ds ingress --namespace=kube-system -o=jsonpath='{.status.desiredNumberScheduled}'"
      register: desiredPods

    - name: wait up to 5 minutes until all ingress controllers pods are ready
      command: "kubectl get ds ingress --namespace=kube-system -o=jsonpath='{.status.numberReady}'"
      register: readyPods
      until: desiredPods.stdout|int == readyPods.stdout|int
      retries: 30
      delay: 10
      failed_when: false # We don't want this task to actually fail (We catch the failure with a custom msg in the next task)
    - name: fail if any ingress pods are not ready
      fail:
        msg: "Waited for all ingress controller pods to be ready, but they took longer than 5 minutes to be in the ready state."
      when: desiredPods.stdout|int != readyPods.stdout|int
    when: run_pod_validation|bool == true
